name: Demo Build
on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

jobs:
  build_on_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.16.0]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}    

      # - name: Get Latest Release
      #   uses: actions/github-script@v5
      #   id: get_latest_release
      #   with:
      #     script: |
      #       const { data: releases } = await github.repos.listReleases({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         per_page: 1 // Get only the latest release
      #       });
      #       console.log(releases[0].tag_name);
      
      - name: Yarn Install
        run: |
          yarn install

      - name: Yarn Build
        run: |
          CI=false yarn build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_latest_release.outputs.result }}
          release_name: Release ${{ steps.get_latest_release.outputs.result }}
          draft: false
          

      # - name: Deploy to S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read --delete

      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     SOURCE_DIR: "build"

      # - name: Invalidate CloudFront
      #   uses: chetan/invalidate-cloudfront-action@v2
      #   env:
      #     DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
      #     PATHS: "/index.html"
      #     AWS_REGION: ${{ secrets.AWS_REGION }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
